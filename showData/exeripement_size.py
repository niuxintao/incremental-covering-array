import numpy as np
import matplotlib.pyplot as plt
import matplotlib.colors as co


def mean(data):
    """Return the sample arithmetic mean of data."""
    n = len(data)
    if n < 1:
        raise ValueError('mean requires at least one data point')
    return sum(data)/n # in Python 2 use sum(data)/float(n)

def _ss(data):
    """Return sum of square deviations of sequence data."""
    c = mean(data)
    ss = sum((x-c)**2 for x in data)
    return ss

def pstdev(data):
    """Calculates the population standard deviation."""
    n = len(data)
    if n < 2:
        raise ValueError('variance requires at least two data points')
    ss = _ss(data)
    pvar = ss/n # the population variance
    return pvar**0.5



#data
x = []
for i in range(0, 55):
    x.append(i)

data = [
[0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.02, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, ], 
[0.03, 0.10, 0.03, 0.00, 0.03, 0.04, 0.10, 0.06, 0.00, 0.02, 0.11, 0.09, 0.01, 0.25, 0.01, 0.02, 0.03, 0.04, 0.10, 0.02, 0.12, 0.02, 0.07, 0.09, 0.06, 0.10, 0.18, 0.12, 0.10, 0.08, 0.08, 0.06, 0.16, 0.17, 0.08, 0.03, 0.12, 0.19, 0.08, 0.07, 0.10, 0.01, 0.11, 0.14, 0.14, 0.09, 0.09, 0.07, 0.18, 0.12, 0.03, 0.08, 0.08, 0.17, 0.01, ], 
[0.06, 0.03, 0.01, 0.00, 0.03, 0.02, 0.00, 0.01, 0.00, 0.01, 0.03, 0.00, 0.00, 0.12, 0.01, 0.01, 0.01, 0.00, 0.03, 0.01, 0.00, 0.00, 0.03, 0.02, 0.00, 0.03, 0.00, 0.01, 0.00, 0.01, 0.01, 0.01, 0.02, 0.06, 0.02, 0.01, 0.04, 0.00, 0.00, 0.00, 0.04, 0.00, 0.02, 0.01, 0.02, 0.01, 0.03, 0.00, 0.03, 0.02, 0.01, 0.00, 0.00, 0.01, 0.00, ], 
[1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, ], 
[0.00, 0.00, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.96, 0.00, 0.00, 0.01, 0.00, 0.00, 0.00, 0.00, 1.00, 1.00, 0.00, 0.00, 0.00, 0.00, 0.02, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.00, 0.00, 0.00, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 1.00, 1.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 1.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, ], 
[0.00, 0.07, 0.00, 0.00, 0.02, 0.09, 0.07, 0.12, 0.00, 1.00, 0.01, 0.06, 0.03, 0.00, 0.01, 0.03, 0.00, 0.00, 0.01, 0.01, 0.10, 0.06, 0.03, 0.12, 1.00, 0.09, 0.21, 0.10, 0.21, 0.13, 0.10, 0.13, 0.14, 0.11, 0.06, 0.12, 0.09, 0.10, 0.00, 0.00, 0.13, 0.10, 0.05, 0.10, 0.12, 0.10, 0.12, 0.00, 0.13, 0.05, 0.04, 0.01, 1.00, 0.19, 0.02, ], 
[0.00, 0.04, 0.02, 0.00, 0.00, 0.01, 0.00, 0.00, 1.00, 0.12, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.61, 0.25, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 1.00, 0.89, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.86, 0.00, 0.00, 0.01, 0.00, 0.00, 0.00, 0.00, ], 
[1.00, 1.00, 1.00, 0.00, 1.00, 1.00, 1.00, 1.00, 0.00, 1.00, 1.00, 1.00, 1.00, 0.00, 1.00, 1.00, 0.00, 0.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 0.00, 0.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 0.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, 1.00, ], 
[0.08, 0.00, 0.00, 0.00, 0.00, 0.00, 0.80, 0.82, -1.00, -1.00, 0.00, 0.00, 0.17, 0.00, 0.10, 0.00, -1.00, -1.00, 0.00, 0.00, 1.00, 0.66, 0.00, 0.00, -1.00, 0.00, 0.00, 0.00, 0.00, 1.00, 1.00, 1.00, 0.00, 0.82, 0.00, 0.51, 1.00, 0.00, -1.00, -1.00, 0.93, 1.00, 0.00, 1.00, 1.00, 0.78, 0.85, -1.00, 1.00, 0.00, 0.00, 1.00, -1.00, 1.00, 0.00, ], 
[0.00, 0.07, 0.02, 0.00, 0.02, 0.03, 0.00, 0.00, -1.00, -1.00, 0.04, 0.05, 0.00, 0.00, 0.00, 0.09, -1.00, -1.00, 0.02, 0.03, 0.00, 0.00, 0.10, 0.20, -1.00, 0.11, 0.28, 1.00, 0.21, 0.00, 0.00, 0.00, 1.00, 0.00, 0.11, 0.00, 0.00, 1.00, -1.00, -1.00, 0.00, 0.00, 0.11, 0.00, 0.00, 0.00, 0.00, -1.00, 0.00, 0.08, 0.05, 0.00, -1.00, 0.00, 0.10, ], 
[0.16, 0.00, 0.07, 0.00, 0.01, 0.00, 1.00, 1.00, -1.00, -1.00, 0.00, 0.00, 1.00, 0.00, 0.11, 0.01, -1.00, -1.00, 0.00, 0.00, 0.86, 1.00, 0.00, 0.00, -1.00, 0.00, 0.01, 0.00, 0.01, 1.00, 1.00, -1.00, 0.00, 1.00, 0.00, 1.00, 1.00, 0.00, -1.00, -1.00, 1.00, 0.96, 0.01, 1.00, -1.00, 1.00, 1.00, -1.00, -1.00, 0.00, 0.00, 1.00, -1.00, -1.00, 0.00, ], 
[1.00, 1.00, 1.00, 0.00, 1.00, 1.00, 0.00, 0.00, -1.00, -1.00, 1.00, 1.00, 0.00, 0.00, 1.00, 1.00, -1.00, -1.00, 1.00, 1.00, 0.00, 0.00, 1.00, 1.00, -1.00, 1.00, 1.00, 1.00, 1.00, 0.00, 0.00, 0.00, 1.00, 0.00, 1.00, 0.00, 0.00, 1.00, -1.00, -1.00, 0.00, 0.00, 1.00, 0.00, 0.00, 0.00, 0.00, -1.00, 0.00, 1.00, 1.00, 0.00, -1.00, 0.00, 1.00, ], 
[0.00, 0.00, 0.00, 0.00, 0.00, 0.00, -1.00, -1.00, -1.00, -1.00, 0.51, 0.54, -1.00, -1.00, 1.00, 0.63, -1.00, -1.00, 0.00, 0.00, -1.00, -1.00, 0.00, 0.00, -1.00, 1.00, 0.00, -1.00, 1.00, -1.00, -1.00, -1.00, -1.00, -1.00, 0.76, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, 0.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, 1.00, 0.00, -1.00, -1.00, -1.00, 0.00, ], 
[0.00, 0.11, 0.02, 0.00, 0.02, 0.01, -1.00, -1.00, -1.00, -1.00, 0.00, 0.00, -1.00, -1.00, 1.00, 0.00, -1.00, -1.00, 0.28, 0.04, -1.00, -1.00, 0.15, 1.00, -1.00, 0.00, 0.13, -1.00, 0.00, -1.00, -1.00, -1.00, -1.00, -1.00, 0.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, 0.10, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, 0.00, 0.05, -1.00, -1.00, -1.00, 1.00, ], 
[0.00, 0.06, 0.05, 0.00, 0.01, 0.02, -1.00, -1.00, -1.00, -1.00, 1.00, 1.00, -1.00, -1.00, 0.00, 1.00, -1.00, -1.00, 0.06, 0.02, -1.00, -1.00, 0.01, -1.00, -1.00, -1.00, 0.02, -1.00, 1.00, -1.00, -1.00, -1.00, -1.00, -1.00, 1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, 0.02, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, 0.01, -1.00, -1.00, -1.00, 0.00, ], 
[0.00, 1.00, 1.00, 0.00, 1.00, 1.00, -1.00, -1.00, -1.00, -1.00, 0.00, 0.00, -1.00, -1.00, 1.00, 0.00, -1.00, -1.00, 1.00, 1.00, -1.00, -1.00, 1.00, 1.00, -1.00, 0.00, 1.00, -1.00, 0.00, -1.00, -1.00, -1.00, -1.00, -1.00, 0.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, 1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, 0.00, 1.00, -1.00, -1.00, -1.00, 1.00, ], 
[-1.00, 1.00, 1.00, -1.00, 0.08, 1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, 1.00, 1.00, -1.00, -1.00, 1.00, -1.00, -1.00, -1.00, 1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, 1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, 1.00, -1.00, -1.00, -1.00, -1.00, ], 
[-1.00, 0.00, 0.00, -1.00, 0.00, 0.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, 0.00, 0.00, -1.00, -1.00, 0.00, -1.00, -1.00, -1.00, 0.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, 0.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, 0.00, -1.00, -1.00, -1.00, -1.00, ], 
[-1.00, 1.00, 0.33, -1.00, 1.00, 1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, 1.00, 1.00, -1.00, -1.00, 1.00, -1.00, -1.00, -1.00, 1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, 1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, 1.00, -1.00, -1.00, -1.00, -1.00, ], 
[-1.00, 0.00, 0.00, -1.00, 0.00, 0.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, 0.00, 0.00, -1.00, -1.00, 0.00, -1.00, -1.00, -1.00, 0.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, 0.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, -1.00, 0.00, -1.00, -1.00, -1.00, -1.00, ], 
]


fig = plt.figure(figsize=(15, 7))

#define subplots 3x6
# 1        2    3 
# 4        5    6
# 7        8    9
# 10    11    12
# 13    14    15
# 16    17    18

ax = []
ax1 = []
ax2 = []
ax3 = []

# from degree 2 to 6
for i in range(1, 6):
     ax.append(fig.add_subplot(5, 1, i))
     ax1.append(fig.add_subplot(5, 1, i, sharex=ax[i-1], sharey=ax[i-1], frameon=False) )
     ax2.append(fig.add_subplot(5, 1, i, sharex=ax[i-1], sharey=ax[i-1], frameon=False) )
     ax3.append(fig.add_subplot(5, 1, i, sharex=ax[i-1], sharey=ax[i-1], frameon=False) )

fig.tight_layout()
fig.text(0.5, 0.04, 'Subjects', ha='center', fontsize=15)
fig.text(0.02, 0.5, 'Size (normalized)', va='center', rotation='vertical', fontsize=15)

#plot data and normalized data
line_up, = ax[0].plot(x, data[0],  marker="o", mfc="None", color="k")
line_down, = ax1[0].plot(x, data[1], ls="--", marker="s",  mfc="None", color="k")
line_issta, = ax2[0].plot(x, data[2], ls=":", marker="x",   mfc="None", color="k")
line_hamming, = ax3[0].plot(x, data[3], ls="-.", marker="^",   mfc="None", color="k")

for i in range(1, 5):
    ax[i].plot(x, data[i*4 + 0],  marker="o", mfc="None", color="k")
    ax1[i].plot(x, data[i*4 + 1], ls="--", marker="s", mfc="None", color="k")
    ax2[i].plot(x, data[i*4 + 2], ls=":", marker="x",  mfc="None", color="k")
    ax3[i].plot(x, data[i*4 + 3], ls="-.", marker="^",   mfc="None", color="k")


#configure legend

fig.legend([line_up, line_issta, line_down, line_hamming ], ['bottom-up', 'collaborative bottom-up', 'top-down',  'top-down-hamming'],'upper left',
           ncol=4,prop={'size':10})

#fig.legend([line_up, line_issta, line_down ], ['bottom-up', 'collaborative bottom-up', 'top-down'],'upper left',
#           ncol=3,prop={'size':10})


#for i in range (0, 55):
#    ax[i].set_xlim(2, 6)
#    ax[i].set_xticks(np.arange(2, 7, 1))
#    ax[i].set_xticklabels(['2','3','4','5','6'])
#    ax[i].set_ylim(0, 1.05)
#    ax[i].set_yticks(np.arange(0, 1.05, 0.2))


#models1 =['Banking1','Banking2','CommProtocol','Concurrency','Healthcare1','Healthcare2','Healthcare3','Healthcare4','Insurance','NetworkMgmt','ProcessorComm1','ProcessorComm2','Services','Storage1','Storage2','Storage3','Storage4','Storage5','SystemMgmt','Telecom']

#models2 =['SPIN-S','SPIN-V','GCC','Apache','Bugzilla',]

#for i in range (0, 20):
#    ax[i].set_title(models1[i], fontsize=12)

#for i in range (20, 25):
#    ax[i].set_title(models2[i-20], fontsize=12)

#for i in range (25, 55):
#    ax[i].set_title('Syn' + str(i-24), fontsize=12)

#configure axis

#123
#ax1.set_ylim(0.7, 1.05)


#ax1.set_yticks(np.arange(0.7, 1.05, 0.1))


#hide Y tick labels for some plots(only plots on the left and right have labels and ticklabels
##ax2.set_yticklabels([]) 
##ax3.set_yticklabels([])

#ax1.set_xlim(2, 6)



#ax1.set_xticklabels(['2','3','4','5','6'])

#ax3.yaxis.tick_left()




#set Y labels
#ax3.set_xlabel(r"$SUT_{1}$")

#set X labels

ax[0].set_ylabel(r"$2-way$")
ax[1].set_ylabel(r"$3-way$")
ax[2].set_ylabel(r"$4-way$")
ax[3].set_ylabel(r"$5-way$")
ax[4].set_ylabel(r"$6-way$")


labels = ['1','5', '10', '15', '20', '25', '30', '35', '40', '45', '50', '55']
x=[0,4,9,14,19,24,29,34,39,44,49,54]
plt.setp(ax, xticks=x,xticklabels=labels)
plt.setp(ax1, xticks=x,xticklabels=labels)
plt.setp(ax2, xticks=x,xticklabels=labels)
plt.setp(ax3, xticks=x,xticklabels=labels)


ax[0].set_xlim(0,55)
ax[1].set_xlim(0,55)
ax[2].set_xlim(0,55)
ax[3].set_xlim(0,55)
ax[4].set_xlim(0,55)

#adjust plot spacing
plt.subplots_adjust(left=0.08, bottom=0.11, right=0.97, top=0.95, wspace=0.25, hspace=0.55)

#finally draw the plot
plt.show()
